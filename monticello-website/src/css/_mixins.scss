@mixin position-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin bg-cover($bg-image) {
    background-image: url($bg-image);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

@mixin fonts($font-family, $font-name, $font-weight: 400, $font-style: normal) {
    @font-face {
        font-family: $font-family;
        font-style: $font-style;
        font-weight: $font-weight;
        src: local(''),
        url('#{$font-folder-path}#{$font-name}.woff2') format('woff2'),
        url('#{$font-folder-path}#{$font-name}.woff') format('woff');
    }
}

@mixin keep-me-checkbox($check-mark-color, $checked-color, $not-checked-color-border, $not-checked-color-background) {
    .keep-me__input+.keep-me_input-text::before {
        content: '';
        display: inline-block;
        width: 1em;
        height: 1em;
        flex-shrink: 0;
        flex-grow: 0;
        border: 1px solid $not-checked-color;
        border-radius: 0.25em;
        margin-right: 0.5em;
        background-color:$not-checked-color-background;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: 50% 50%;
    }
    
    .keep-me__input:checked+.keep-me_input-text::before {
        border-color: $checked-color;
        background-color: $checked-color;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='$check-mark-color' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
    }
}
@mixin grid($count: 12) {
    @for $i from 1 through $count {
        $width: (100% / 12 * $i);

        .col-#{$i} {
            max-width: $width;
            width: 100%;
            flex-basis: $width;
        }
    }

    @each $breack-point,
    $breack-point-value in $breack-points {
        @media screen and (max-width: $breack-point-value) {
            @for $i from 1 through $count {
                $width: 100% / 12 * $i;

                .col-#{$breack-point}-#{$i} {
                    max-width: $width;
                    width: 100%;
                    flex-basis: $width;
                }
            }
        }
    }
}

@mixin media($point) {
    @media screen and (max-width: map-get($breack-points, $point)) {
        @content;
    }
}
